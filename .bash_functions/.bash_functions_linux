# .bash_functions
# list of bash functions

# remove a BASH Function by name
removef() {
	if [ $# -ne 1 ] ; then
		echo "removef: err: incorrect number of arguments"
	else
		if [ ~/.bash_functions ] ; then
			source=~/.bash_functions
		else
			source=~/.bashrc
		fi

		rando="$(strings /dev/urandom | grep -o '[[:alnum:]]' | head -n $num | tr -d '\n'; echo)"
		title="$1() {"
		edit=0
		found=0
		count=0
		while IFS='' read -r line || [[ -n "$line" ]] ; do
			if [ "$title" == "$line" ] && [ $edit -eq 0 ] ; then
				edit=1
				found=1
			elif [ "$line" == "}" ] && [ $edit -eq 1 ] ; then
				edit=0
				count="$(($count + 1))"
			else
				if [ $edit -eq 0 ] ; then
					printf "%s\n" "$line" >> $rando
				fi
			fi
		done < "$source"

		cat $rando > $source
		rm -rf $rando
		if [ $found -eq 0 ] ; then
			echo "$1 not found in $source"
		else
			if [ $count -eq 1 ] ; then
				echo "Removed $1 from $source"
				source ~/.bashrc
			else
				echo "Removed $1 $count times from $source"
				source ~/.bashrc
			fi
		fi
	fi
}

# list all BASH functions
lsf() {
	if [ ~/.bash_functions ] ; then
		source=~/.bash_functions
	else
		source=~/.bashrc
	fi

	while IFS='' read -r line || [[ -n $line ]] ; do
		let="$(echo $line | fold -w1)"
		chars="$(echo $let | tr -d '\040\011\012\015')"

		if [[ ( "${chars[*]: -1}" == "{" ) && ( "${chars: -2:1}" == ")" && "${chars: -3:1}" == "(" ) ]] ; then
			len=${#chars}
			len="$(($len - 1))"
			echo "${chars:0:$len}"
		fi
	done < "$source"
}

# list all cows
lscows() {
	COWS=`cowsay -l | tail -n +2 | tr ' ' '\n'`
	for COW in $COWS; do cowsay -f $COW $COW; done
}

# random animal speech
randimal() {
	if [[ $# -eq 0 ]] ; then
		fortune | cowsay -f `cowsay -l | tail -n +2 | tr ' ' '\n' | shuf -n 1` | lolcat
	else
		echo "$1" | cowsay -f `cowsay -l | tail -n +2 | tr ' ' '\n' | shuf -n 1` | lolcat
	fi
}

# update Konphig settings for system
update() {
	OS=`ostype`
	if [[ "$OS" == "Mac" ]] ; then
		CMD="MD5 -q"
	else
		CMD="md5sum"
	fi

	VAL=0

	if ! [[ "$($CMD ~/Konphig/.bash_aliases)" == "$($CMD ~/.bash_aliases)" ]] ; then
		echo "Updating .bash_aliases"
		VAL=1
		yes | cp -rf ~/Konphig/.bash_aliases ~ >/dev/null 2>&1
	fi
	if ! [[ "$($CMD ~/Konphig/.bash_variables)" == "$($CMD ~/.bash_variables)" ]] ; then
		echo "Updating .bash_variables"
		VAL=1
		yes | cp -rf ~/Konphig/.bash_variables ~ >/dev/null 2>&1
	fi
	if ! [[ "$($CMD ~/Konphig/.bash_functions)" == "$($CMD ~/.bash_functions)" ]] ; then
		echo "Updating .bash_functions"
		VAL=1
		yes | cp -rf ~/Konphig/.bash_functions ~ >/dev/null 2>&1
	fi
	if ! [[ "$($CMD ~/Konphig/.bash_profile)" == "$($CMD ~/.bash_profile)" ]] ; then
		echo "Updating .bash_profile"
		VAL=1
		yes | cp -rf ~/Konphig/.bash_profile ~ >/dev/null 2>&1
	fi
	if ! [[ "$($CMD ~/Konphig/.bashrc)" == "$($CMD ~/.bashrc)" ]] ; then
		echo "Updating .bashrc"
		VAL=1
		yes | cp -rf ~/Konphig/.bashrc ~ >/dev/null 2>&1
	fi
	if ! [[ "$($CMD ~/Konphig/.git-prompt.sh)" == "$($CMD ~/.git-prompt.sh)" ]] ; then
		echo "Updating .git-prompt.sh"
		VAL=1
		yes | cp -rf ~/Konphig/.git-prompt.sh ~ >/dev/null 2>&1
	fi
	if ! [[ "$($CMD ~/Konphig/.gitconfig)" == "$($CMD ~/.gitconfig)" ]] ; then
		echo "Updating .gitconfig"
		VAL=1
		yes | cp -rf ~/Konphig/.gitconfig ~ >/dev/null 2>&1
	fi
	if ! [[ "$($CMD ~/Konphig/.profile)" == "$($CMD ~/.profile)" ]] ; then
		echo "Updating .profile"
		VAL=1
		yes | cp -rf ~/Konphig/.profile ~ >/dev/null 2>&1
	fi
	if ! [[ "$($CMD ~/Konphig/.tmux.conf)" == "$($CMD ~/.tmux.conf)" ]] ; then
		echo "Updating .tmux.conf"
		VAL=1
		yes | cp -rf ~/Konphig/.tmux.conf ~ >/dev/null 2>&1
	fi
	if ! [[ "$($CMD ~/Konphig/.vimrc)" == "$($CMD ~/.vimrc)" ]] ; then
		echo "Updating .vimrc"
		VAL=1
		yes | cp -rf ~/Konphig/.vimrc ~ >/dev/null 2>&1
	fi

	if [[ $VAL -eq 0 ]] ; then
		echo "Nothing to update"
	else
		source ~/.bashrc
	fi
}



